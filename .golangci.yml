linters-settings:
  dupl:
    threshold: 100
  exhaustive:
    default-signifies-exhaustive: false
  funlen:
    lines: 150
    statements: 150
  gci:
    local-prefixes: github.com/cloudradar-monitoring/tacoscript
  goconst:
    min-len: 2
    min-occurrences: 6
  nakedret:
    max-func-lines: 5
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
      - paramTypeCombine
  gocyclo:
    min-complexity: 30
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  golint:
    min-confidence: 0
  govet:
    check-shadowing: true
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  lll:
    line-length: 140
  maligned:
    suggest-new: true
  misspell:
    locale: US
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - bodyclose
    - unused
    - depguard
    - dogsled
    - dupl
    - errcheck
    - exhaustive
    - funlen
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - revive
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - exportloopref
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace
issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - linters:
        - gocritic
      text: "unnecessaryDefer:"
    - linters:
        - goconst
      text: "string `windows`"
    - linters:
        - gosec
      text: "G402:|G501:|G505:|G401:"
    - path: _test\.go
      linters:
        - funlen
        - gocyclo
        - dupl
        - lll
  exclude:
    - composites
    # govet
    - "shadow: declaration of .err. shadows declaration"

# golangci.com configuration
# https://github.com/golangci/golangci/wiki/Configuration
#service:
#  golangci-lint-version: 1.27.x # use the fixed version to not introduce new linters unexpectedly
#  prepare:
#    - echo "here I can run custom commands, but no preparation needed for this repo"

output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate, default is "colored-line-number"
  format: colored-line-number

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

  # make issues output unique by line, default is true
  uniq-by-line: true

  # add a prefix to the output file references; default is no prefix
  path-prefix: ""
